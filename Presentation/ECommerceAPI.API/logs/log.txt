2023-12-03 13:59:31.992 +04:00 [INF] User profile is available. Using 'C:\Users\cingi\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-03 13:59:32.396 +04:00 [INF] Now listening on: https://localhost:7238
2023-12-03 13:59:32.398 +04:00 [INF] Now listening on: http://localhost:5221
2023-12-03 13:59:32.403 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-03 13:59:32.405 +04:00 [INF] Hosting environment: Development
2023-12-03 13:59:32.407 +04:00 [INF] Content root path: C:\Users\cingi\Desktop\MiniECommerce\MiniECommerceAPI\Presentation\ECommerceAPI.API\
2023-12-03 15:02:52.366 +04:00 [INF] User profile is available. Using 'C:\Users\cingi\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-03 15:02:53.359 +04:00 [INF] Now listening on: https://localhost:7238
2023-12-03 15:02:53.361 +04:00 [INF] Now listening on: http://localhost:5221
2023-12-03 15:02:53.369 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-03 15:02:53.371 +04:00 [INF] Hosting environment: Development
2023-12-03 15:02:53.373 +04:00 [INF] Content root path: C:\Users\cingi\Desktop\MiniECommerce\MiniECommerceAPI\Presentation\ECommerceAPI.API\
2023-12-03 15:09:07.924 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/auth/google-login - -
2023-12-03 15:09:08.261 +04:00 [INF] CORS policy execution successful.
2023-12-03 15:09:08.281 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7238/api/auth/google-login application/json 1467
2023-12-03 15:09:08.282 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/auth/google-login - - - 204 - - 366.6422ms
2023-12-03 15:09:08.299 +04:00 [INF] CORS policy execution successful.
2023-12-03 15:09:08.407 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.AuthController.GoogleLogin (ECommerceAPI.API)'
2023-12-03 15:09:08.485 +04:00 [INF] Route matched with {action = "GoogleLogin", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GoogleLogin(ECommerceAPI.Application.Features.Commands.AppUser.GoogleLogin.GoogleLoginCommandRequest) on controller ECommerceAPI.API.Controllers.AuthController (ECommerceAPI.API).
2023-12-03 15:09:12.837 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7238/api/auth/google-login application/json 1467
2023-12-03 15:09:12.847 +04:00 [INF] CORS policy execution successful.
2023-12-03 15:09:12.849 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.AuthController.GoogleLogin (ECommerceAPI.API)'
2023-12-03 15:09:12.851 +04:00 [INF] Route matched with {action = "GoogleLogin", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GoogleLogin(ECommerceAPI.Application.Features.Commands.AppUser.GoogleLogin.GoogleLoginCommandRequest) on controller ECommerceAPI.API.Controllers.AuthController (ECommerceAPI.API).
2023-12-03 15:09:17.119 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.AuthController.GoogleLogin (ECommerceAPI.API) in 8622.0925ms
2023-12-03 15:09:17.123 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.AuthController.GoogleLogin (ECommerceAPI.API)'
2023-12-03 15:09:17.169 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: An attempt was made to use the context instance while it is being configured. A DbContext instance cannot be used inside 'OnConfiguring' since it is still being configured at this point. This can happen if a second operation is started on this context instance before a previous operation completed. Any instance members are not guaranteed to be thread safe.
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.Set[TEntity]()
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.get_UserLogins()
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserLoginAsync(String loginProvider, String providerKey, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByLoginAsync(String loginProvider, String providerKey, CancellationToken cancellationToken)
   at ECommerceAPI.Persistence.Services.AuthService.GoogleLoginAsync(String idToken, Int32 accessTokenLifeTime) in C:\Users\cingi\Desktop\MiniECommerce\MiniECommerceAPI\Infrastructure\ECommerceAPI.Persistence\Services\AuthService.cs:line 103
   at ECommerceAPI.Application.Features.Commands.AppUser.GoogleLogin.GoogleLoginCommandHandler.Handle(GoogleLoginCommandRequest request, CancellationToken cancellationToken) in C:\Users\cingi\Desktop\MiniECommerce\MiniECommerceAPI\Core\ECommerceAPI.Application\Features\Commands\AppUser\GoogleLogin\GoogleLoginCommandHandler.cs:line 16
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at ECommerceAPI.API.Controllers.AuthController.GoogleLogin(GoogleLoginCommandRequest googleLoginCommandRequest) in C:\Users\cingi\Desktop\MiniECommerce\MiniECommerceAPI\Presentation\ECommerceAPI.API\Controllers\AuthController.cs:line 39
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_5>d.MoveNext() in C:\Users\cingi\Desktop\MiniECommerce\MiniECommerceAPI\Presentation\ECommerceAPI.API\Program.cs:line 108
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2023-12-03 15:09:17.589 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7238/api/auth/google-login application/json 1467 - 500 - text/plain;+charset=utf-8 9308.1265ms
2023-12-03 15:09:18.178 +04:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'InvoiceFile'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-12-03 15:09:18.518 +04:00 [INF] Entity Framework Core 6.0.25 initialized 'ECommerceAPIDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.21' with options: None
2023-12-03 15:09:19.277 +04:00 [INF] Executed DbCommand (232ms) [Parameters=[@__loginProvider_0='?' (Size = 450), @__providerKey_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[LoginProvider], [a].[ProviderKey], [a].[ProviderDisplayName], [a].[UserId]
FROM [AspNetUserLogins] AS [a]
WHERE ([a].[LoginProvider] = @__loginProvider_0) AND ([a].[ProviderKey] = @__providerKey_1)
2023-12-03 15:09:19.969 +04:00 [INF] Executed DbCommand (352ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenEndDate], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__userId_0
2023-12-03 15:09:20.076 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__loginProvider_0='?' (Size = 450), @__providerKey_1='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[LoginProvider], [a].[ProviderKey], [a].[ProviderDisplayName], [a].[UserId]
FROM [AspNetUserLogins] AS [a]
WHERE ([a].[LoginProvider] = @__loginProvider_0) AND ([a].[ProviderKey] = @__providerKey_1)
2023-12-03 15:09:20.148 +04:00 [INF] Executed DbCommand (66ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenEndDate], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__userId_0
2023-12-03 15:09:20.156 +04:00 [WRN] AddLogin for user failed because it was already associated with another user.
2023-12-03 15:09:20.782 +04:00 [INF] Executed DbCommand (60ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenEndDate], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-12-03 15:09:21.314 +04:00 [INF] Executed DbCommand (386ms) [Parameters=[@p17='?' (Size = 450), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p18='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTimeOffset), @p6='?' (Size = 4000), @p7='?' (Size = 256), @p8='?' (Size = 256), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (DbType = Boolean), @p12='?' (Size = 4000), @p13='?' (DbType = DateTime2), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [LockoutEnabled] = @p4, [LockoutEnd] = @p5, [Name] = @p6, [NormalizedEmail] = @p7, [NormalizedUserName] = @p8, [PasswordHash] = @p9, [PhoneNumber] = @p10, [PhoneNumberConfirmed] = @p11, [RefreshToken] = @p12, [RefreshTokenEndDate] = @p13, [SecurityStamp] = @p14, [TwoFactorEnabled] = @p15, [UserName] = @p16
WHERE [Id] = @p17 AND [ConcurrencyStamp] = @p18;
SELECT @@ROWCOUNT;
2023-12-03 15:09:21.359 +04:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Commands.AppUser.GoogleLogin.GoogleLoginCommandResponse'.
2023-12-03 15:09:21.377 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.AuthController.GoogleLogin (ECommerceAPI.API) in 8512.5254ms
2023-12-03 15:09:21.381 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.AuthController.GoogleLogin (ECommerceAPI.API)'
2023-12-03 15:09:21.385 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7238/api/auth/google-login application/json 1467 - 200 - application/json;+charset=utf-8 8547.1650ms
2023-12-03 15:09:33.520 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/auth/login - -
2023-12-03 15:09:33.525 +04:00 [INF] CORS policy execution successful.
2023-12-03 15:09:33.529 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/auth/login - - - 204 - - 8.9586ms
2023-12-03 15:09:33.534 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7238/api/auth/login application/json 42
2023-12-03 15:09:33.536 +04:00 [INF] CORS policy execution successful.
2023-12-03 15:09:33.544 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.AuthController.Login (ECommerceAPI.API)'
2023-12-03 15:09:33.550 +04:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ECommerceAPI.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller ECommerceAPI.API.Controllers.AuthController (ECommerceAPI.API).
2023-12-03 15:09:33.628 +04:00 [INF] Executed DbCommand (53ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenEndDate], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-12-03 15:09:33.908 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenEndDate], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-12-03 15:09:33.934 +04:00 [INF] Executed DbCommand (17ms) [Parameters=[@p17='?' (Size = 450), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p18='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTimeOffset), @p6='?' (Size = 4000), @p7='?' (Size = 256), @p8='?' (Size = 256), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (DbType = Boolean), @p12='?' (Size = 4000), @p13='?' (DbType = DateTime2), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [LockoutEnabled] = @p4, [LockoutEnd] = @p5, [Name] = @p6, [NormalizedEmail] = @p7, [NormalizedUserName] = @p8, [PasswordHash] = @p9, [PhoneNumber] = @p10, [PhoneNumberConfirmed] = @p11, [RefreshToken] = @p12, [RefreshTokenEndDate] = @p13, [SecurityStamp] = @p14, [TwoFactorEnabled] = @p15, [UserName] = @p16
WHERE [Id] = @p17 AND [ConcurrencyStamp] = @p18;
SELECT @@ROWCOUNT;
2023-12-03 15:09:33.943 +04:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse'.
2023-12-03 15:09:33.948 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.AuthController.Login (ECommerceAPI.API) in 379.4888ms
2023-12-03 15:09:33.950 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.AuthController.Login (ECommerceAPI.API)'
2023-12-03 15:09:33.953 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7238/api/auth/login application/json 42 - 200 - application/json;+charset=utf-8 419.4337ms
2023-12-03 15:09:38.915 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 15:09:38.917 +04:00 [INF] CORS policy execution successful.
2023-12-03 15:09:38.920 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - - - 204 - - 4.8455ms
2023-12-03 15:09:38.931 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 15:09:38.945 +04:00 [INF] CORS policy execution successful.
2023-12-03 15:09:39.115 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 15:09:39.123 +04:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 15:09:39.281 +04:00 [INF] Executed DbCommand (102ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-03 15:09:39.327 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2023-12-03 15:09:39.335 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2023-12-03 15:09:39.389 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[Name], [p].[Stock], [p].[Price], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-03 15:09:39.401 +04:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-03 15:09:39.420 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 293.7102ms
2023-12-03 15:09:39.423 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 15:09:39.432 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 500.2672ms
2023-12-03 15:16:41.132 +04:00 [INF] User profile is available. Using 'C:\Users\cingi\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-03 15:16:41.709 +04:00 [INF] Now listening on: https://localhost:7238
2023-12-03 15:16:41.711 +04:00 [INF] Now listening on: http://localhost:5221
2023-12-03 15:16:41.719 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-03 15:16:41.720 +04:00 [INF] Hosting environment: Development
2023-12-03 15:16:41.722 +04:00 [INF] Content root path: C:\Users\cingi\Desktop\MiniECommerce\MiniECommerceAPI\Presentation\ECommerceAPI.API\
2023-12-03 15:16:50.528 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 15:16:50.713 +04:00 [INF] CORS policy execution successful.
2023-12-03 15:16:50.755 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - - - 204 - - 235.6625ms
2023-12-03 15:16:50.764 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 15:16:50.794 +04:00 [INF] CORS policy execution successful.
2023-12-03 15:16:51.164 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 15:16:51.235 +04:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 15:16:52.809 +04:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'InvoiceFile'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-12-03 15:16:53.106 +04:00 [INF] Entity Framework Core 6.0.25 initialized 'ECommerceAPIDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.21' with options: None
2023-12-03 15:16:53.535 +04:00 [INF] Executed DbCommand (60ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-03 15:16:53.592 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2023-12-03 15:16:53.594 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2023-12-03 15:16:53.647 +04:00 [INF] Executed DbCommand (23ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[Name], [p].[Stock], [p].[Price], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-03 15:16:53.660 +04:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-03 15:16:53.689 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 2442.3964ms
2023-12-03 15:16:53.692 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 15:16:53.696 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 2931.6703ms
2023-12-03 15:16:57.526 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/products - -
2023-12-03 15:16:57.529 +04:00 [INF] CORS policy execution successful.
2023-12-03 15:16:57.531 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/products - - - 204 - - 5.1717ms
2023-12-03 15:16:57.537 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7238/api/products application/json 38
2023-12-03 15:16:57.541 +04:00 [INF] CORS policy execution successful.
2023-12-03 15:16:57.549 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-03 15:16:57.558 +04:00 [INF] Route matched with {action = "Post", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(ECommerceAPI.Application.Features.Commands.Product.CreateProduct.CreateProductCommandRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 15:16:58.296 +04:00 [INF] Executed DbCommand (361ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = Single), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Products] ([Id], [CreatedDate], [Name], [Price], [Stock], [UpdatedDate])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2023-12-03 15:16:58.349 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API) in 785.7158ms
2023-12-03 15:16:58.352 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-03 15:16:58.357 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: Value cannot be null. (Parameter 'logger')
   at Microsoft.Extensions.Logging.LoggerExtensions.Log(ILogger logger, LogLevel logLevel, EventId eventId, Exception exception, String message, Object[] args)
   at Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(ILogger logger, String message, Object[] args)
   at ECommerceAPI.Application.Features.Commands.Product.CreateProduct.CreateProductCommandHandler.Handle(CreateProductCommandRequest request, CancellationToken cancellationToken) in C:\Users\cingi\Desktop\MiniECommerce\MiniECommerceAPI\Core\ECommerceAPI.Application\Features\Commands\Product\CreateProduct\CreateProductCommandHandler.cs:line 32
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at ECommerceAPI.API.Controllers.ProductsController.Post(CreateProductCommandRequest createProductCommandRequest) in C:\Users\cingi\Desktop\MiniECommerce\MiniECommerceAPI\Presentation\ECommerceAPI.API\Controllers\ProductsController.cs:line 44
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_5>d.MoveNext() in C:\Users\cingi\Desktop\MiniECommerce\MiniECommerceAPI\Presentation\ECommerceAPI.API\Program.cs:line 108
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2023-12-03 15:16:58.734 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7238/api/products application/json 38 - 500 - text/plain;+charset=utf-8 1197.4528ms
2023-12-03 15:17:04.032 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/products - -
2023-12-03 15:17:04.035 +04:00 [INF] CORS policy execution successful.
2023-12-03 15:17:04.037 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/products - - - 204 - - 4.1470ms
2023-12-03 15:17:04.044 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7238/api/products application/json 38
2023-12-03 15:17:04.047 +04:00 [INF] CORS policy execution successful.
2023-12-03 15:17:04.051 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-03 15:17:04.054 +04:00 [INF] Route matched with {action = "Post", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(ECommerceAPI.Application.Features.Commands.Product.CreateProduct.CreateProductCommandRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 15:17:04.067 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = Single), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Products] ([Id], [CreatedDate], [Name], [Price], [Stock], [UpdatedDate])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2023-12-03 15:17:04.079 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API) in 18.6534ms
2023-12-03 15:17:04.083 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-03 15:17:04.085 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: Value cannot be null. (Parameter 'logger')
   at Microsoft.Extensions.Logging.LoggerExtensions.Log(ILogger logger, LogLevel logLevel, EventId eventId, Exception exception, String message, Object[] args)
   at Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(ILogger logger, String message, Object[] args)
   at ECommerceAPI.Application.Features.Commands.Product.CreateProduct.CreateProductCommandHandler.Handle(CreateProductCommandRequest request, CancellationToken cancellationToken) in C:\Users\cingi\Desktop\MiniECommerce\MiniECommerceAPI\Core\ECommerceAPI.Application\Features\Commands\Product\CreateProduct\CreateProductCommandHandler.cs:line 32
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at ECommerceAPI.API.Controllers.ProductsController.Post(CreateProductCommandRequest createProductCommandRequest) in C:\Users\cingi\Desktop\MiniECommerce\MiniECommerceAPI\Presentation\ECommerceAPI.API\Controllers\ProductsController.cs:line 44
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_5>d.MoveNext() in C:\Users\cingi\Desktop\MiniECommerce\MiniECommerceAPI\Presentation\ECommerceAPI.API\Program.cs:line 108
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2023-12-03 15:17:04.116 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7238/api/products application/json 38 - 500 - text/plain;+charset=utf-8 71.1536ms
2023-12-03 15:17:45.613 +04:00 [INF] User profile is available. Using 'C:\Users\cingi\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-03 15:17:45.862 +04:00 [INF] Now listening on: https://localhost:7238
2023-12-03 15:17:45.865 +04:00 [INF] Now listening on: http://localhost:5221
2023-12-03 15:17:45.870 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-03 15:17:45.872 +04:00 [INF] Hosting environment: Development
2023-12-03 15:17:45.873 +04:00 [INF] Content root path: C:\Users\cingi\Desktop\MiniECommerce\MiniECommerceAPI\Presentation\ECommerceAPI.API\
2023-12-03 15:17:48.913 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/products - -
2023-12-03 15:17:49.040 +04:00 [INF] CORS policy execution successful.
2023-12-03 15:17:49.051 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/products - - - 204 - - 147.3966ms
2023-12-03 15:17:49.055 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7238/api/products application/json 38
2023-12-03 15:17:49.059 +04:00 [INF] CORS policy execution successful.
2023-12-03 15:17:49.298 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-03 15:17:49.338 +04:00 [INF] Route matched with {action = "Post", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(ECommerceAPI.Application.Features.Commands.Product.CreateProduct.CreateProductCommandRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 15:17:50.391 +04:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'InvoiceFile'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-12-03 15:17:50.569 +04:00 [INF] Entity Framework Core 6.0.25 initialized 'ECommerceAPIDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.21' with options: None
2023-12-03 15:17:50.865 +04:00 [INF] Executed DbCommand (40ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = Single), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Products] ([Id], [CreatedDate], [Name], [Price], [Stock], [UpdatedDate])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2023-12-03 15:17:50.902 +04:00 [INF] Product added
2023-12-03 15:17:50.914 +04:00 [INF] Executing StatusCodeResult, setting HTTP status code 201
2023-12-03 15:17:50.922 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API) in 1575.6114ms
2023-12-03 15:17:50.926 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-03 15:17:50.933 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7238/api/products application/json 38 - 201 0 - 1878.1905ms
2023-12-03 15:17:51.250 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 15:17:51.254 +04:00 [INF] CORS policy execution successful.
2023-12-03 15:17:51.256 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - - - 204 - - 5.4184ms
2023-12-03 15:17:51.265 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 15:17:51.278 +04:00 [INF] CORS policy execution successful.
2023-12-03 15:17:51.285 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 15:17:51.295 +04:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 15:17:51.672 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-03 15:17:51.719 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2023-12-03 15:17:51.721 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2023-12-03 15:17:51.751 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[Name], [p].[Stock], [p].[Price], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-03 15:17:51.765 +04:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-03 15:17:51.784 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 482.509ms
2023-12-03 15:17:51.787 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 15:17:51.796 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 527.7724ms
2023-12-03 15:18:16.207 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/products - -
2023-12-03 15:18:16.209 +04:00 [INF] CORS policy execution successful.
2023-12-03 15:18:16.215 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/products - - - 204 - - 7.5770ms
2023-12-03 15:18:16.220 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7238/api/products application/json 38
2023-12-03 15:18:16.222 +04:00 [INF] CORS policy execution successful.
2023-12-03 15:18:16.236 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-03 15:18:16.239 +04:00 [INF] Route matched with {action = "Post", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(ECommerceAPI.Application.Features.Commands.Product.CreateProduct.CreateProductCommandRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 15:18:16.256 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = Single), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Products] ([Id], [CreatedDate], [Name], [Price], [Stock], [UpdatedDate])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2023-12-03 15:18:16.274 +04:00 [INF] Product added
2023-12-03 15:18:16.276 +04:00 [INF] Executing StatusCodeResult, setting HTTP status code 201
2023-12-03 15:18:16.278 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API) in 30.8557ms
2023-12-03 15:18:16.281 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-03 15:18:16.285 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7238/api/products application/json 38 - 201 0 - 64.6133ms
2023-12-03 15:18:16.316 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 15:18:16.318 +04:00 [INF] CORS policy execution successful.
2023-12-03 15:18:16.325 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - - - 204 - - 8.6585ms
2023-12-03 15:18:16.334 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 15:18:16.339 +04:00 [INF] CORS policy execution successful.
2023-12-03 15:18:16.342 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 15:18:16.345 +04:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 15:18:16.359 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-03 15:18:16.371 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[Name], [p].[Stock], [p].[Price], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-03 15:18:16.379 +04:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-03 15:18:16.388 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 32.762ms
2023-12-03 15:18:16.391 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 15:18:16.397 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 63.6870ms
2023-12-03 15:20:43.525 +04:00 [INF] User profile is available. Using 'C:\Users\cingi\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-03 15:20:43.945 +04:00 [INF] Now listening on: https://localhost:7238
2023-12-03 15:20:43.947 +04:00 [INF] Now listening on: http://localhost:5221
2023-12-03 15:20:43.953 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-03 15:20:43.957 +04:00 [INF] Hosting environment: Development
2023-12-03 15:20:43.959 +04:00 [INF] Content root path: C:\Users\cingi\Desktop\MiniECommerce\MiniECommerceAPI\Presentation\ECommerceAPI.API\
2023-12-03 15:20:44.343 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/products - -
2023-12-03 15:20:44.397 +04:00 [INF] CORS policy execution successful.
2023-12-03 15:20:44.408 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/products - - - 204 - - 67.5367ms
2023-12-03 15:20:44.412 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7238/api/products application/json 38
2023-12-03 15:20:44.421 +04:00 [INF] CORS policy execution successful.
2023-12-03 15:20:44.675 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-03 15:20:44.795 +04:00 [INF] Route matched with {action = "Post", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(ECommerceAPI.Application.Features.Commands.Product.CreateProduct.CreateProductCommandRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 15:20:46.265 +04:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'InvoiceFile'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-12-03 15:20:46.441 +04:00 [INF] Entity Framework Core 6.0.25 initialized 'ECommerceAPIDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.21' with options: None
2023-12-03 15:20:47.038 +04:00 [INF] Executed DbCommand (156ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = Single), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Products] ([Id], [CreatedDate], [Name], [Price], [Stock], [UpdatedDate])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2023-12-03 15:20:47.096 +04:00 [INF] Product added
2023-12-03 15:20:47.111 +04:00 [INF] Executing StatusCodeResult, setting HTTP status code 201
2023-12-03 15:20:47.120 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API) in 2304.5922ms
2023-12-03 15:20:47.125 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-03 15:20:47.134 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7238/api/products application/json 38 - 201 0 - 2722.2265ms
2023-12-03 15:20:47.246 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 15:20:47.248 +04:00 [INF] CORS policy execution successful.
2023-12-03 15:20:47.250 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - - - 204 - - 4.2743ms
2023-12-03 15:20:47.264 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 15:20:47.285 +04:00 [INF] CORS policy execution successful.
2023-12-03 15:20:47.299 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 15:20:47.315 +04:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 15:20:47.779 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-03 15:20:47.820 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2023-12-03 15:20:47.826 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2023-12-03 15:20:47.869 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[Name], [p].[Stock], [p].[Price], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-03 15:20:47.883 +04:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-03 15:20:47.903 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 576.0417ms
2023-12-03 15:20:47.907 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 15:20:47.912 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 648.3460ms
2023-12-03 20:15:08.884 +04:00 [INF] User profile is available. Using 'C:\Users\cingi\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-03 20:15:09.223 +04:00 [INF] Now listening on: https://localhost:7238
2023-12-03 20:15:09.226 +04:00 [INF] Now listening on: http://localhost:5221
2023-12-03 20:15:09.233 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-03 20:15:09.235 +04:00 [INF] Hosting environment: Development
2023-12-03 20:15:09.236 +04:00 [INF] Content root path: C:\Users\cingi\Desktop\MiniECommerce\MiniECommerceAPI\Presentation\ECommerceAPI.API\
2023-12-03 20:15:40.773 +04:00 [INF] User profile is available. Using 'C:\Users\cingi\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-03 20:15:41.159 +04:00 [INF] Now listening on: https://localhost:7238
2023-12-03 20:15:41.173 +04:00 [INF] Now listening on: http://localhost:5221
2023-12-03 20:15:41.181 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-03 20:15:41.184 +04:00 [INF] Hosting environment: Development
2023-12-03 20:15:41.186 +04:00 [INF] Content root path: C:\Users\cingi\Desktop\MiniECommerce\MiniECommerceAPI\Presentation\ECommerceAPI.API\
2023-12-03 20:17:11.007 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/auth/login - -
2023-12-03 20:17:11.106 +04:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:17:11.112 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:17:11.115 +04:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2023-12-03 20:17:11.128 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7238/api/auth/login application/json 42
2023-12-03 20:17:11.128 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/auth/login - - - 204 - - 126.3687ms
2023-12-03 20:17:11.141 +04:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
Content-Length: 42
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:17:11.144 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:17:11.162 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.AuthController.Login (ECommerceAPI.API)'
2023-12-03 20:17:11.222 +04:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ECommerceAPI.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller ECommerceAPI.API.Controllers.AuthController (ECommerceAPI.API).
2023-12-03 20:17:11.246 +04:00 [INF] RequestBody: {"usernameOrEmail":"123","password":"123"}
2023-12-03 20:17:12.917 +04:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'InvoiceFile'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-12-03 20:17:13.169 +04:00 [INF] Entity Framework Core 6.0.25 initialized 'ECommerceAPIDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.21' with options: None
2023-12-03 20:17:16.099 +04:00 [INF] Executed DbCommand (2,265ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenEndDate], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-12-03 20:17:16.523 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenEndDate], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-12-03 20:17:17.295 +04:00 [INF] Executed DbCommand (642ms) [Parameters=[@p17='?' (Size = 450), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p18='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTimeOffset), @p6='?' (Size = 4000), @p7='?' (Size = 256), @p8='?' (Size = 256), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (DbType = Boolean), @p12='?' (Size = 4000), @p13='?' (DbType = DateTime2), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [LockoutEnabled] = @p4, [LockoutEnd] = @p5, [Name] = @p6, [NormalizedEmail] = @p7, [NormalizedUserName] = @p8, [PasswordHash] = @p9, [PhoneNumber] = @p10, [PhoneNumberConfirmed] = @p11, [RefreshToken] = @p12, [RefreshTokenEndDate] = @p13, [SecurityStamp] = @p14, [TwoFactorEnabled] = @p15, [UserName] = @p16
WHERE [Id] = @p17 AND [ConcurrencyStamp] = @p18;
SELECT @@ROWCOUNT;
2023-12-03 20:17:17.329 +04:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse'.
2023-12-03 20:17:17.346 +04:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2023-12-03 20:17:17.358 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.AuthController.Login (ECommerceAPI.API) in 6125.6317ms
2023-12-03 20:17:17.362 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.AuthController.Login (ECommerceAPI.API)'
2023-12-03 20:17:17.365 +04:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiMTIzIiwibmJmIjoxNzAxNjIwMjM2LCJleHAiOjE3MDE2MjExMzYsImlzcyI6Ind3dy5teWFwaS5jb20iLCJhdWQiOiJ3d3cub2theS5jb20ifQ.zaBj2RmE5n2LAZzdznSAxl1X60-Bi0lpS6jl0DmcY-k","expiration":"2023-12-03T16:32:16.2768991Z","refreshToken":"3nRw3kE+idYczz0Ijj6AQirPmw2z7GsUTyy0Y+7i1I8="},"message":"User Succesfully logged in"}
2023-12-03 20:17:17.370 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7238/api/auth/login application/json 42 - 200 - application/json;+charset=utf-8 6242.1141ms
2023-12-03 20:17:19.412 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/products-hub/negotiate?negotiateVersion=1 - -
2023-12-03 20:17:19.416 +04:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:17:19.426 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:17:19.428 +04:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2023-12-03 20:17:19.431 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 19.6891ms
2023-12-03 20:17:19.459 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7238/products-hub/negotiate?negotiateVersion=1 - 0
2023-12-03 20:17:19.463 +04:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Cookie: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
Content-Length: 0
X-Requested-With: XMLHttpRequest
x-signalr-user-agent: [Redacted]
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:17:19.466 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:17:19.473 +04:00 [INF] Executing endpoint '/products-hub/negotiate'
2023-12-03 20:17:19.497 +04:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2023-12-03 20:17:19.500 +04:00 [INF] Executed endpoint '/products-hub/negotiate'
2023-12-03 20:17:19.501 +04:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"SeuDV0ER__VmteaBIMgObw","connectionToken":"t4HY9X8SI_ME4Lh8xriBBA","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2023-12-03 20:17:19.512 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7238/products-hub/negotiate?negotiateVersion=1 - 0 - 200 316 application/json 52.4825ms
2023-12-03 20:17:19.611 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7238/products-hub?id=t4HY9X8SI_ME4Lh8xriBBA - -
2023-12-03 20:17:19.629 +04:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Accept: */*
Connection: keep-alive, Upgrade
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Cache-Control: no-cache
Cookie: [Redacted]
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Extensions: permessage-deflate
Sec-WebSocket-Key: [Redacted]
DNT: 1
Sec-Fetch-Dest: [Redacted]
Sec-Fetch-Mode: [Redacted]
Sec-Fetch-Site: [Redacted]
2023-12-03 20:17:19.634 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:17:19.644 +04:00 [INF] Executing endpoint '/products-hub'
2023-12-03 20:17:22.164 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 20:17:22.165 +04:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:17:22.168 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:17:22.172 +04:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2023-12-03 20:17:22.174 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - - - 204 - - 10.2495ms
2023-12-03 20:17:22.178 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 20:17:22.181 +04:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:17:22.184 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:17:22.324 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 20:17:22.334 +04:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 20:17:22.427 +04:00 [INF] Executed DbCommand (45ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-03 20:17:22.445 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2023-12-03 20:17:22.448 +04:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2023-12-03 20:17:22.479 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[Name], [p].[Stock], [p].[Price], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-03 20:17:22.486 +04:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-03 20:17:22.499 +04:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2023-12-03 20:17:22.501 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 161.2041ms
2023-12-03 20:17:22.506 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 20:17:22.510 +04:00 [INF] ResponseBody: {"totalCount":17,"products":[{"id":"342b6971-26ff-452c-cbb4-08dbe3747cd5","name":"1234","stock":11,"price":11,"createdDate":"2023-11-12T11:42:45.4112356","updatedDate":"0001-01-01T00:00:00"},{"id":"ed3e06f6-7969-4d3e-9b31-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:57.8335131","updatedDate":"0001-01-01T00:00:00"},{"id":"50dd1e9e-f43f-4dd8-9b32-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:58.6950696","updatedDate":"0001-01-01T00:00:00"},{"id":"1affef7c-5ab5-489b-9b33-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:59.3127967","updatedDate":"0001-01-01T00:00:00"},{"id":"ac175e86-fb8c-49ea-9b34-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:59.8199594","updatedDate":"0001-01-01T00:00:00"}]}
2023-12-03 20:17:22.513 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 335.1470ms
2023-12-03 20:17:32.121 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/products - -
2023-12-03 20:17:32.127 +04:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:17:32.130 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:17:32.132 +04:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2023-12-03 20:17:32.135 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/products - - - 204 - - 13.5903ms
2023-12-03 20:17:32.143 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7238/api/products application/json 38
2023-12-03 20:17:32.147 +04:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
Content-Length: 38
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:17:32.150 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:17:32.154 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-03 20:17:32.161 +04:00 [INF] Route matched with {action = "Post", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(ECommerceAPI.Application.Features.Commands.Product.CreateProduct.CreateProductCommandRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 20:17:32.167 +04:00 [INF] RequestBody: {"name":"123","stock":123,"price":123}
2023-12-03 20:17:32.484 +04:00 [INF] Executed DbCommand (154ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = Single), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Products] ([Id], [CreatedDate], [Name], [Price], [Stock], [UpdatedDate])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2023-12-03 20:17:32.490 +04:00 [INF] Product added
2023-12-03 20:17:32.504 +04:00 [INF] Executing StatusCodeResult, setting HTTP status code 201
2023-12-03 20:17:32.506 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API) in 340.3346ms
2023-12-03 20:17:32.509 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-03 20:17:32.511 +04:00 [INF] Response:
StatusCode: 201
2023-12-03 20:17:32.514 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7238/api/products application/json 38 - 201 0 - 370.5629ms
2023-12-03 20:17:32.614 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 20:17:32.616 +04:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:17:32.619 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:17:32.622 +04:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2023-12-03 20:17:32.625 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - - - 204 - - 11.2143ms
2023-12-03 20:17:32.630 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 20:17:32.634 +04:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:17:32.637 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:17:32.641 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 20:17:32.643 +04:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 20:17:32.651 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-03 20:17:32.660 +04:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[Name], [p].[Stock], [p].[Price], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-03 20:17:32.665 +04:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-03 20:17:32.668 +04:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2023-12-03 20:17:32.670 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 22.7874ms
2023-12-03 20:17:32.672 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 20:17:32.675 +04:00 [INF] ResponseBody: {"totalCount":18,"products":[{"id":"342b6971-26ff-452c-cbb4-08dbe3747cd5","name":"1234","stock":11,"price":11,"createdDate":"2023-11-12T11:42:45.4112356","updatedDate":"0001-01-01T00:00:00"},{"id":"ed3e06f6-7969-4d3e-9b31-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:57.8335131","updatedDate":"0001-01-01T00:00:00"},{"id":"50dd1e9e-f43f-4dd8-9b32-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:58.6950696","updatedDate":"0001-01-01T00:00:00"},{"id":"1affef7c-5ab5-489b-9b33-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:59.3127967","updatedDate":"0001-01-01T00:00:00"},{"id":"ac175e86-fb8c-49ea-9b34-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:59.8199594","updatedDate":"0001-01-01T00:00:00"}]}
2023-12-03 20:17:32.678 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 48.6242ms
2023-12-03 20:20:01.225 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/products-hub/negotiate?negotiateVersion=1 - -
2023-12-03 20:20:01.303 +04:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:20:01.306 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:20:01.307 +04:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2023-12-03 20:20:01.310 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 84.4234ms
2023-12-03 20:20:01.344 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7238/products-hub/negotiate?negotiateVersion=1 - 0
2023-12-03 20:20:01.475 +04:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Cookie: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
Content-Length: 0
X-Requested-With: XMLHttpRequest
x-signalr-user-agent: [Redacted]
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:20:01.488 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:20:01.491 +04:00 [INF] Executing endpoint '/products-hub/negotiate'
2023-12-03 20:20:01.495 +04:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2023-12-03 20:20:01.506 +04:00 [INF] Executed endpoint '/products-hub/negotiate'
2023-12-03 20:20:01.509 +04:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"QOPsoo-r8f8vFSI4qowRkA","connectionToken":"4W88mGLhPsjl23aoKuY_5Q","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2023-12-03 20:20:01.517 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7238/products-hub/negotiate?negotiateVersion=1 - 0 - 200 316 application/json 178.0674ms
2023-12-03 20:20:01.776 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7238/products-hub?id=4W88mGLhPsjl23aoKuY_5Q - -
2023-12-03 20:20:01.779 +04:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Accept: */*
Connection: keep-alive, Upgrade
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Cache-Control: no-cache
Cookie: [Redacted]
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Extensions: permessage-deflate
Sec-WebSocket-Key: [Redacted]
DNT: 1
Sec-Fetch-Dest: [Redacted]
Sec-Fetch-Mode: [Redacted]
Sec-Fetch-Site: [Redacted]
2023-12-03 20:20:01.786 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:20:01.787 +04:00 [INF] Executing endpoint '/products-hub'
2023-12-03 20:20:17.571 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 20:20:17.573 +04:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:20:17.576 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:20:17.578 +04:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2023-12-03 20:20:17.580 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - - - 204 - - 9.1637ms
2023-12-03 20:20:17.607 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 20:20:17.613 +04:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:20:17.616 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:20:17.619 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 20:20:17.621 +04:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 20:20:17.683 +04:00 [INF] Executed DbCommand (56ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-03 20:20:17.693 +04:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[Name], [p].[Stock], [p].[Price], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-03 20:20:17.704 +04:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-03 20:20:17.710 +04:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2023-12-03 20:20:17.714 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 89.3319ms
2023-12-03 20:20:17.718 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 20:20:17.722 +04:00 [INF] ResponseBody: {"totalCount":18,"products":[{"id":"342b6971-26ff-452c-cbb4-08dbe3747cd5","name":"1234","stock":11,"price":11,"createdDate":"2023-11-12T11:42:45.4112356","updatedDate":"0001-01-01T00:00:00"},{"id":"ed3e06f6-7969-4d3e-9b31-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:57.8335131","updatedDate":"0001-01-01T00:00:00"},{"id":"50dd1e9e-f43f-4dd8-9b32-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:58.6950696","updatedDate":"0001-01-01T00:00:00"},{"id":"1affef7c-5ab5-489b-9b33-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:59.3127967","updatedDate":"0001-01-01T00:00:00"},{"id":"ac175e86-fb8c-49ea-9b34-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:59.8199594","updatedDate":"0001-01-01T00:00:00"}]}
2023-12-03 20:20:17.730 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 123.5487ms
2023-12-03 20:20:22.061 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/products - -
2023-12-03 20:20:22.063 +04:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:20:22.066 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:20:22.067 +04:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2023-12-03 20:20:22.070 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/products - - - 204 - - 9.4427ms
2023-12-03 20:20:22.075 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7238/api/products application/json 36
2023-12-03 20:20:22.081 +04:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
Content-Length: 36
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:20:22.087 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:20:22.089 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-03 20:20:22.092 +04:00 [INF] Route matched with {action = "Post", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(ECommerceAPI.Application.Features.Commands.Product.CreateProduct.CreateProductCommandRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 20:20:22.097 +04:00 [INF] RequestBody: {"name":"123","stock":123,"price":0}
2023-12-03 20:20:22.417 +04:00 [INF] Executed DbCommand (314ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = Single), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Products] ([Id], [CreatedDate], [Name], [Price], [Stock], [UpdatedDate])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2023-12-03 20:20:22.423 +04:00 [INF] Product added
2023-12-03 20:20:22.424 +04:00 [INF] Executing StatusCodeResult, setting HTTP status code 201
2023-12-03 20:20:22.426 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API) in 329.8016ms
2023-12-03 20:20:22.429 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-03 20:20:22.431 +04:00 [INF] Response:
StatusCode: 201
2023-12-03 20:20:22.434 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7238/api/products application/json 36 - 201 0 - 358.2890ms
2023-12-03 20:20:22.626 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 20:20:22.628 +04:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:20:22.630 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:20:22.631 +04:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2023-12-03 20:20:22.634 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - - - 204 - - 7.2975ms
2023-12-03 20:20:22.637 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 20:20:22.640 +04:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:20:22.642 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:20:22.644 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 20:20:22.646 +04:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 20:20:22.652 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-03 20:20:22.657 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[Name], [p].[Stock], [p].[Price], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-03 20:20:22.662 +04:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-03 20:20:22.664 +04:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2023-12-03 20:20:22.666 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 16.0862ms
2023-12-03 20:20:22.668 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 20:20:22.671 +04:00 [INF] ResponseBody: {"totalCount":19,"products":[{"id":"342b6971-26ff-452c-cbb4-08dbe3747cd5","name":"1234","stock":11,"price":11,"createdDate":"2023-11-12T11:42:45.4112356","updatedDate":"0001-01-01T00:00:00"},{"id":"ed3e06f6-7969-4d3e-9b31-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:57.8335131","updatedDate":"0001-01-01T00:00:00"},{"id":"50dd1e9e-f43f-4dd8-9b32-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:58.6950696","updatedDate":"0001-01-01T00:00:00"},{"id":"1affef7c-5ab5-489b-9b33-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:59.3127967","updatedDate":"0001-01-01T00:00:00"},{"id":"ac175e86-fb8c-49ea-9b34-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:59.8199594","updatedDate":"0001-01-01T00:00:00"}]}
2023-12-03 20:20:22.675 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 37.1619ms
2023-12-03 20:21:39.427 +04:00 [INF] Executed endpoint '/products-hub'
2023-12-03 20:21:39.431 +04:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Sun, 03 Dec 2023 16:17:19 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2023-12-03 20:21:39.436 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7238/products-hub?id=t4HY9X8SI_ME4Lh8xriBBA - - - 101 - - 259825.4136ms
2023-12-03 20:21:39.459 +04:00 [INF] Executed endpoint '/products-hub'
2023-12-03 20:21:39.461 +04:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Sun, 03 Dec 2023 16:20:00 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2023-12-03 20:21:39.463 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:7238/products-hub?id=4W88mGLhPsjl23aoKuY_5Q - - - 101 - - 97687.2826ms
2023-12-03 20:21:40.743 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/products-hub/negotiate?negotiateVersion=1 - -
2023-12-03 20:21:40.745 +04:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:21:40.749 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:21:40.751 +04:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2023-12-03 20:21:40.772 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 28.5945ms
2023-12-03 20:21:40.777 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7238/products-hub/negotiate?negotiateVersion=1 - 0
2023-12-03 20:21:40.786 +04:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Cookie: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
Content-Length: 0
X-Requested-With: XMLHttpRequest
x-signalr-user-agent: [Redacted]
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:21:40.790 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:21:40.792 +04:00 [INF] Executing endpoint '/products-hub/negotiate'
2023-12-03 20:21:40.794 +04:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2023-12-03 20:21:40.795 +04:00 [INF] Executed endpoint '/products-hub/negotiate'
2023-12-03 20:21:40.797 +04:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"TFe_9lurV3WuFC_5FzyHSw","connectionToken":"7g5fsXkhvndwNx8-ftAAxg","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2023-12-03 20:21:40.800 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7238/products-hub/negotiate?negotiateVersion=1 - 0 - 200 316 application/json 22.7973ms
2023-12-03 20:21:40.912 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:7238/products-hub?id=7g5fsXkhvndwNx8-ftAAxg - -
2023-12-03 20:21:40.915 +04:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Accept: */*
Connection: keep-alive, Upgrade
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Cache-Control: no-cache
Cookie: [Redacted]
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Extensions: permessage-deflate
Sec-WebSocket-Key: [Redacted]
DNT: 1
Sec-Fetch-Dest: [Redacted]
Sec-Fetch-Mode: [Redacted]
Sec-Fetch-Site: [Redacted]
2023-12-03 20:21:40.925 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:21:40.927 +04:00 [INF] Executing endpoint '/products-hub'
2023-12-03 20:21:41.410 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 20:21:41.412 +04:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:21:41.414 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:21:41.416 +04:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2023-12-03 20:21:41.418 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - - - 204 - - 7.9633ms
2023-12-03 20:21:41.425 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 20:21:41.427 +04:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:21:41.430 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:21:41.432 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 20:21:41.436 +04:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 20:21:41.539 +04:00 [INF] Executed DbCommand (97ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-03 20:21:41.546 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[Name], [p].[Stock], [p].[Price], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-03 20:21:41.551 +04:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-03 20:21:41.553 +04:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2023-12-03 20:21:41.555 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 114.6027ms
2023-12-03 20:21:41.557 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 20:21:41.559 +04:00 [INF] ResponseBody: {"totalCount":19,"products":[{"id":"342b6971-26ff-452c-cbb4-08dbe3747cd5","name":"1234","stock":11,"price":11,"createdDate":"2023-11-12T11:42:45.4112356","updatedDate":"0001-01-01T00:00:00"},{"id":"ed3e06f6-7969-4d3e-9b31-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:57.8335131","updatedDate":"0001-01-01T00:00:00"},{"id":"50dd1e9e-f43f-4dd8-9b32-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:58.6950696","updatedDate":"0001-01-01T00:00:00"},{"id":"1affef7c-5ab5-489b-9b33-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:59.3127967","updatedDate":"0001-01-01T00:00:00"},{"id":"ac175e86-fb8c-49ea-9b34-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:59.8199594","updatedDate":"0001-01-01T00:00:00"}]}
2023-12-03 20:21:41.563 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 137.9927ms
2023-12-03 20:21:49.982 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/products - -
2023-12-03 20:21:49.984 +04:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:21:49.987 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:21:49.992 +04:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2023-12-03 20:21:49.994 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/products - - - 204 - - 11.6763ms
2023-12-03 20:21:49.998 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7238/api/products application/json 38
2023-12-03 20:21:50.001 +04:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
Content-Length: 38
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:21:50.006 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:21:50.009 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-03 20:21:50.011 +04:00 [INF] Route matched with {action = "Post", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(ECommerceAPI.Application.Features.Commands.Product.CreateProduct.CreateProductCommandRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 20:21:50.015 +04:00 [INF] RequestBody: {"name":"123","stock":123,"price":123}
2023-12-03 20:21:50.026 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = Single), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Products] ([Id], [CreatedDate], [Name], [Price], [Stock], [UpdatedDate])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2023-12-03 20:21:50.031 +04:00 [INF] Product added
2023-12-03 20:21:50.033 +04:00 [INF] Executing StatusCodeResult, setting HTTP status code 201
2023-12-03 20:21:50.034 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API) in 19.3306ms
2023-12-03 20:21:50.036 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-03 20:21:50.038 +04:00 [INF] Response:
StatusCode: 201
2023-12-03 20:21:50.041 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7238/api/products application/json 38 - 201 0 - 42.3804ms
2023-12-03 20:21:50.062 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 20:21:50.064 +04:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:21:50.066 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:21:50.068 +04:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2023-12-03 20:21:50.070 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - - - 204 - - 7.1886ms
2023-12-03 20:21:50.076 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 20:21:50.078 +04:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:21:50.081 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:21:50.083 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 20:21:50.085 +04:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 20:21:50.094 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-03 20:21:50.099 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[Name], [p].[Stock], [p].[Price], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-03 20:21:50.103 +04:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-03 20:21:50.108 +04:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2023-12-03 20:21:50.110 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 19.5091ms
2023-12-03 20:21:50.113 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 20:21:50.116 +04:00 [INF] ResponseBody: {"totalCount":20,"products":[{"id":"342b6971-26ff-452c-cbb4-08dbe3747cd5","name":"1234","stock":11,"price":11,"createdDate":"2023-11-12T11:42:45.4112356","updatedDate":"0001-01-01T00:00:00"},{"id":"ed3e06f6-7969-4d3e-9b31-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:57.8335131","updatedDate":"0001-01-01T00:00:00"},{"id":"50dd1e9e-f43f-4dd8-9b32-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:58.6950696","updatedDate":"0001-01-01T00:00:00"},{"id":"1affef7c-5ab5-489b-9b33-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:59.3127967","updatedDate":"0001-01-01T00:00:00"},{"id":"ac175e86-fb8c-49ea-9b34-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:59.8199594","updatedDate":"0001-01-01T00:00:00"}]}
2023-12-03 20:21:50.120 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 44.0270ms
2023-12-03 20:21:54.725 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7238/api/products application/json 38
2023-12-03 20:21:54.732 +04:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
Content-Length: 38
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:21:54.735 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:21:54.742 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-03 20:21:54.744 +04:00 [INF] Route matched with {action = "Post", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(ECommerceAPI.Application.Features.Commands.Product.CreateProduct.CreateProductCommandRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 20:21:54.749 +04:00 [INF] RequestBody: {"name":"123","stock":123,"price":123}
2023-12-03 20:21:54.769 +04:00 [INF] Executed DbCommand (14ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = Single), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Products] ([Id], [CreatedDate], [Name], [Price], [Stock], [UpdatedDate])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2023-12-03 20:21:54.778 +04:00 [INF] Product added
2023-12-03 20:21:54.780 +04:00 [INF] Executing StatusCodeResult, setting HTTP status code 201
2023-12-03 20:21:54.782 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API) in 33.7408ms
2023-12-03 20:21:54.784 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-03 20:21:54.786 +04:00 [INF] Response:
StatusCode: 201
2023-12-03 20:21:54.790 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7238/api/products application/json 38 - 201 0 - 64.3031ms
2023-12-03 20:21:54.810 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 20:21:54.813 +04:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:21:54.819 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:21:54.827 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 20:21:54.834 +04:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 20:21:54.849 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-03 20:21:54.861 +04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[Name], [p].[Stock], [p].[Price], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-03 20:21:54.865 +04:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-03 20:21:54.868 +04:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2023-12-03 20:21:54.870 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 24.6214ms
2023-12-03 20:21:54.882 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 20:21:54.884 +04:00 [INF] ResponseBody: {"totalCount":21,"products":[{"id":"342b6971-26ff-452c-cbb4-08dbe3747cd5","name":"1234","stock":11,"price":11,"createdDate":"2023-11-12T11:42:45.4112356","updatedDate":"0001-01-01T00:00:00"},{"id":"ed3e06f6-7969-4d3e-9b31-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:57.8335131","updatedDate":"0001-01-01T00:00:00"},{"id":"50dd1e9e-f43f-4dd8-9b32-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:58.6950696","updatedDate":"0001-01-01T00:00:00"},{"id":"1affef7c-5ab5-489b-9b33-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:59.3127967","updatedDate":"0001-01-01T00:00:00"},{"id":"ac175e86-fb8c-49ea-9b34-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:59.8199594","updatedDate":"0001-01-01T00:00:00"}]}
2023-12-03 20:21:54.892 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 82.1546ms
2023-12-03 20:21:59.259 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/products - -
2023-12-03 20:21:59.261 +04:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:21:59.264 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:21:59.266 +04:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2023-12-03 20:21:59.269 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/products - - - 204 - - 9.7667ms
2023-12-03 20:21:59.277 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7238/api/products application/json 38
2023-12-03 20:21:59.279 +04:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
Content-Length: 38
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:21:59.282 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:21:59.284 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-03 20:21:59.286 +04:00 [INF] Route matched with {action = "Post", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(ECommerceAPI.Application.Features.Commands.Product.CreateProduct.CreateProductCommandRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 20:21:59.291 +04:00 [INF] RequestBody: {"name":"123","stock":123,"price":123}
2023-12-03 20:21:59.315 +04:00 [INF] Executed DbCommand (21ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = Single), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Products] ([Id], [CreatedDate], [Name], [Price], [Stock], [UpdatedDate])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2023-12-03 20:21:59.324 +04:00 [INF] Product added
2023-12-03 20:21:59.326 +04:00 [INF] Executing StatusCodeResult, setting HTTP status code 201
2023-12-03 20:21:59.328 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API) in 36.6985ms
2023-12-03 20:21:59.330 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-03 20:21:59.332 +04:00 [INF] Response:
StatusCode: 201
2023-12-03 20:21:59.334 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7238/api/products application/json 38 - 201 0 - 57.0376ms
2023-12-03 20:21:59.353 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 20:21:59.358 +04:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:21:59.361 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:21:59.363 +04:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2023-12-03 20:21:59.365 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - - - 204 - - 11.2641ms
2023-12-03 20:21:59.376 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 20:21:59.378 +04:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:21:59.381 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:21:59.383 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 20:21:59.385 +04:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 20:21:59.394 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-03 20:21:59.400 +04:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[Name], [p].[Stock], [p].[Price], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-03 20:21:59.407 +04:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-03 20:21:59.411 +04:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2023-12-03 20:21:59.413 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 20.8533ms
2023-12-03 20:21:59.416 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 20:21:59.419 +04:00 [INF] ResponseBody: {"totalCount":22,"products":[{"id":"342b6971-26ff-452c-cbb4-08dbe3747cd5","name":"1234","stock":11,"price":11,"createdDate":"2023-11-12T11:42:45.4112356","updatedDate":"0001-01-01T00:00:00"},{"id":"ed3e06f6-7969-4d3e-9b31-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:57.8335131","updatedDate":"0001-01-01T00:00:00"},{"id":"50dd1e9e-f43f-4dd8-9b32-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:58.6950696","updatedDate":"0001-01-01T00:00:00"},{"id":"1affef7c-5ab5-489b-9b33-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:59.3127967","updatedDate":"0001-01-01T00:00:00"},{"id":"ac175e86-fb8c-49ea-9b34-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:59.8199594","updatedDate":"0001-01-01T00:00:00"}]}
2023-12-03 20:21:59.424 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 55.4594ms
2023-12-03 20:22:11.901 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/products - -
2023-12-03 20:22:11.903 +04:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:22:11.907 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:22:11.909 +04:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2023-12-03 20:22:11.912 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/products - - - 204 - - 11.4503ms
2023-12-03 20:22:11.916 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7238/api/products application/json 38
2023-12-03 20:22:11.918 +04:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
Content-Length: 38
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:22:11.921 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:22:11.925 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-03 20:22:11.928 +04:00 [INF] Route matched with {action = "Post", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(ECommerceAPI.Application.Features.Commands.Product.CreateProduct.CreateProductCommandRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 20:22:11.934 +04:00 [INF] RequestBody: {"name":"123","stock":123,"price":123}
2023-12-03 20:22:11.942 +04:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = Single), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Products] ([Id], [CreatedDate], [Name], [Price], [Stock], [UpdatedDate])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2023-12-03 20:22:11.968 +04:00 [INF] Product added
2023-12-03 20:22:11.970 +04:00 [INF] Executing StatusCodeResult, setting HTTP status code 201
2023-12-03 20:22:11.971 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API) in 37.8878ms
2023-12-03 20:22:11.978 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-03 20:22:11.980 +04:00 [INF] Response:
StatusCode: 201
2023-12-03 20:22:11.982 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7238/api/products application/json 38 - 201 0 - 66.2279ms
2023-12-03 20:22:12.007 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 20:22:12.010 +04:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:22:12.013 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:22:12.015 +04:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2023-12-03 20:22:12.017 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - - - 204 - - 9.8146ms
2023-12-03 20:22:12.020 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 20:22:12.027 +04:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:22:12.031 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:22:12.033 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 20:22:12.035 +04:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 20:22:12.049 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-03 20:22:12.071 +04:00 [INF] Executed DbCommand (16ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[Name], [p].[Stock], [p].[Price], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-03 20:22:12.094 +04:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-03 20:22:12.104 +04:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2023-12-03 20:22:12.120 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 73.6241ms
2023-12-03 20:22:12.132 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 20:22:12.137 +04:00 [INF] ResponseBody: {"totalCount":23,"products":[{"id":"342b6971-26ff-452c-cbb4-08dbe3747cd5","name":"1234","stock":11,"price":11,"createdDate":"2023-11-12T11:42:45.4112356","updatedDate":"0001-01-01T00:00:00"},{"id":"ed3e06f6-7969-4d3e-9b31-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:57.8335131","updatedDate":"0001-01-01T00:00:00"},{"id":"50dd1e9e-f43f-4dd8-9b32-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:58.6950696","updatedDate":"0001-01-01T00:00:00"},{"id":"1affef7c-5ab5-489b-9b33-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:59.3127967","updatedDate":"0001-01-01T00:00:00"},{"id":"ac175e86-fb8c-49ea-9b34-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:59.8199594","updatedDate":"0001-01-01T00:00:00"}]}
2023-12-03 20:22:12.154 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 133.3443ms
2023-12-03 20:22:17.385 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/products - -
2023-12-03 20:22:17.388 +04:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:22:17.391 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:22:17.394 +04:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2023-12-03 20:22:17.397 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/products - - - 204 - - 11.9848ms
2023-12-03 20:22:17.400 +04:00 [INF] Request starting HTTP/2 POST https://localhost:7238/api/products application/json 39
2023-12-03 20:22:17.403 +04:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
Content-Length: 39
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:22:17.407 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:22:17.410 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-03 20:22:17.412 +04:00 [INF] Route matched with {action = "Post", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(ECommerceAPI.Application.Features.Commands.Product.CreateProduct.CreateProductCommandRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 20:22:17.416 +04:00 [INF] RequestBody: {"name":"123","stock":123,"price":1234}
2023-12-03 20:22:17.420 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = Single), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Products] ([Id], [CreatedDate], [Name], [Price], [Stock], [UpdatedDate])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2023-12-03 20:22:17.429 +04:00 [INF] Product added
2023-12-03 20:22:17.431 +04:00 [INF] Executing StatusCodeResult, setting HTTP status code 201
2023-12-03 20:22:17.433 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API) in 16.9308ms
2023-12-03 20:22:17.436 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Post (ECommerceAPI.API)'
2023-12-03 20:22:17.438 +04:00 [INF] Response:
StatusCode: 201
2023-12-03 20:22:17.442 +04:00 [INF] Request finished HTTP/2 POST https://localhost:7238/api/products application/json 39 - 201 0 - 41.0081ms
2023-12-03 20:22:17.463 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 20:22:17.465 +04:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:22:17.467 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:22:17.470 +04:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2023-12-03 20:22:17.471 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/products?page=0&size=5 - - - 204 - - 8.6543ms
2023-12-03 20:22:17.478 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - -
2023-12-03 20:22:17.481 +04:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:22:17.484 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:22:17.486 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 20:22:17.488 +04:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 20:22:17.495 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-03 20:22:17.500 +04:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[Name], [p].[Stock], [p].[Price], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-03 20:22:17.503 +04:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-03 20:22:17.506 +04:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2023-12-03 20:22:17.509 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 15.5466ms
2023-12-03 20:22:17.513 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 20:22:17.519 +04:00 [INF] ResponseBody: {"totalCount":24,"products":[{"id":"342b6971-26ff-452c-cbb4-08dbe3747cd5","name":"1234","stock":11,"price":11,"createdDate":"2023-11-12T11:42:45.4112356","updatedDate":"0001-01-01T00:00:00"},{"id":"ed3e06f6-7969-4d3e-9b31-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:57.8335131","updatedDate":"0001-01-01T00:00:00"},{"id":"50dd1e9e-f43f-4dd8-9b32-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:58.6950696","updatedDate":"0001-01-01T00:00:00"},{"id":"1affef7c-5ab5-489b-9b33-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:59.3127967","updatedDate":"0001-01-01T00:00:00"},{"id":"ac175e86-fb8c-49ea-9b34-08dbe4321659","name":"12343","stock":11,"price":11,"createdDate":"2023-11-13T10:19:59.8199594","updatedDate":"0001-01-01T00:00:00"}]}
2023-12-03 20:22:17.524 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7238/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 44.2582ms
2023-12-03 20:22:20.392 +04:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7238/api/products?page=4&size=5 - -
2023-12-03 20:22:20.394 +04:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:22:20.397 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:22:20.398 +04:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2023-12-03 20:22:20.401 +04:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7238/api/products?page=4&size=5 - - - 204 - - 8.8383ms
2023-12-03 20:22:20.404 +04:00 [INF] Request starting HTTP/2 GET https://localhost:7238/api/products?page=4&size=5 - -
2023-12-03 20:22:20.409 +04:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7238
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.5
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
TE: trailers
DNT: 1
sec-fetch-dest: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
2023-12-03 20:22:20.414 +04:00 [INF] CORS policy execution successful.
2023-12-03 20:22:20.417 +04:00 [INF] Executing endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 20:22:20.420 +04:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller ECommerceAPI.API.Controllers.ProductsController (ECommerceAPI.API).
2023-12-03 20:22:20.430 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2023-12-03 20:22:20.435 +04:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[Name], [p].[Stock], [p].[Price], [p].[CreatedDate], [p].[UpdatedDate]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-12-03 20:22:20.439 +04:00 [INF] Executing OkObjectResult, writing value of type 'ECommerceAPI.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2023-12-03 20:22:20.443 +04:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2023-12-03 20:22:20.445 +04:00 [INF] Executed action ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API) in 19.4349ms
2023-12-03 20:22:20.449 +04:00 [INF] Executed endpoint 'ECommerceAPI.API.Controllers.ProductsController.Get (ECommerceAPI.API)'
2023-12-03 20:22:20.452 +04:00 [INF] ResponseBody: {"totalCount":24,"products":[{"id":"eccc586f-6a6f-4ffc-ebae-08dbf41b5a79","name":"123","stock":123,"price":123,"createdDate":"2023-12-03T16:21:54.7534574","updatedDate":"0001-01-01T00:00:00"},{"id":"d006a4d9-773b-4e6b-ebaf-08dbf41b5a79","name":"123","stock":123,"price":123,"createdDate":"2023-12-03T16:21:59.2942821","updatedDate":"0001-01-01T00:00:00"},{"id":"18e0df06-b51f-4b55-ebb0-08dbf41b5a79","name":"123","stock":123,"price":123,"createdDate":"2023-12-03T16:22:11.9362125","updatedDate":"0001-01-01T00:00:00"},{"id":"cd80bb93-e81d-4e87-ebb1-08dbf41b5a79","name":"123","stock":123,"price":1234,"createdDate":"2023-12-03T16:22:17.4188529","updatedDate":"0001-01-01T00:00:00"}]}
2023-12-03 20:22:20.455 +04:00 [INF] Request finished HTTP/2 GET https://localhost:7238/api/products?page=4&size=5 - - - 200 - application/json;+charset=utf-8 50.7804ms
